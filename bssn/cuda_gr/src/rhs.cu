// generated by bssnUtils.py code for derivative computation
//date: 2018-09-06 22:08:05
#include "rhs.cuh"

namespace cuda {

/**compute derivative kernel __computeDerivPass1 */
__global__ void __computeDerivPass1(const double**__unzipInVar,MemoryDerivs* __derivWorkspace, const cuda::_Block* __dendroBlkList, const cudaDeviceProp*__deviceProperties){

const _Block dblock=__dendroBlkList[blockIdx.x];
const unsigned int NUM_SM_UNITS=__deviceProperties->multiProcessorCount;
const unsigned int SM_ID=blockIdx.x%NUM_SM_UNITS;
const unsigned int offset=dblock.getOffset();
const unsigned int *sz=dblock.getSz();
const double* hx=dblock.getDx();
const double dx=hx[0];
const double dy=hx[1];
const double dz=hx[2];
const double* ptmin=dblock.getPtMin();
const double* ptmax=dblock.getPtMax();
const unsigned int bflag=dblock.getBFlag();

const unsigned int blkSz=sz[0]*sz[1]*sz[2];

const unsigned int tile_sz[3]={9,9,9};
const unsigned int TILE_SZ=tile_sz[0]*tile_sz[1]*tile_sz[2];


__shared__ double grad_0[729];
__shared__ double grad_1[729];
__shared__ double grad_2[729];
__shared__ double grad2_0_1[729];
__shared__ double grad2_0_2[729];
__shared__ double grad2_1_2[729];
const unsigned int Lb = 1;// load begin bound
const unsigned int Le = sz[0]-1;// load end bound
const unsigned int BLK_INTERATIONS = ((int)ceil((double)(Le-Lb-tile_sz[0])/(tile_sz[0]-2*2)))+1;

unsigned int ijk_lm[3*2];
//allocate memory for shared deriv variables. 


//allocate memory for shared unzip input. 
__shared__ double unzipVarInShared[729];
for(unsigned int iter=0;iter<BLK_INTERATIONS;iter++){

		 ijk_lm[2*0+0]=max(1,(int)(1 + tile_sz[0]*iter -2*iter*2));
		 ijk_lm[2*0+1]=min(ijk_lm[2*0+0]+tile_sz[0],sz[0]-1);

		 ijk_lm[2*1+0]=max(1,(int)(1 + tile_sz[1]*iter -2*iter*2));
		 ijk_lm[2*1+1]=min(ijk_lm[2*1+0]+tile_sz[1],sz[1]-1);

		 ijk_lm[2*2+0]=max(1,(int)(1 + tile_sz[2]*iter -2*iter*2));
		 ijk_lm[2*2+1]=min(ijk_lm[2*2+0]+tile_sz[2],sz[2]-1);
		 //printf(" iter : %d threadid (%d,%d,%d) tile begin: (%d,%d,%d) tile end: (%d,%d,%d) \n",iter, threadIdx.x,threadIdx.y,threadIdx.z,ijk_lm[0],ijk_lm[2],ijk_lm[4],ijk_lm[1],ijk_lm[3],ijk_lm[5]);



		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_ALPHA][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42_x((double *) grad_0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_y((double *) grad_1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_z((double *) grad_2,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();

		deriv42_y((double *) grad2_0_1,(const double *) grad_0,dy, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_z((double *) grad2_0_2,(const double *) grad_0,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_z((double *) grad2_1_2,(const double *) grad_1,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) grad_0,&(__derivWorkspace->__grad_0_alpha[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad_1,&(__derivWorkspace->__grad_1_alpha[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad_2,&(__derivWorkspace->__grad_2_alpha[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad2_0_1,&(__derivWorkspace->__grad2_0_1_alpha[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad2_0_2,&(__derivWorkspace->__grad2_0_2_alpha[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad2_1_2,&(__derivWorkspace->__grad2_1_2_alpha[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_BETA0][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42_x((double *) grad_0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_y((double *) grad_1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_z((double *) grad_2,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();

		deriv42_y((double *) grad2_0_1,(const double *) grad_0,dy, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_z((double *) grad2_0_2,(const double *) grad_0,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_z((double *) grad2_1_2,(const double *) grad_1,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) grad_0,&(__derivWorkspace->__grad_0_beta0[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad_1,&(__derivWorkspace->__grad_1_beta0[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad_2,&(__derivWorkspace->__grad_2_beta0[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad2_0_1,&(__derivWorkspace->__grad2_0_1_beta0[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad2_0_2,&(__derivWorkspace->__grad2_0_2_beta0[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad2_1_2,&(__derivWorkspace->__grad2_1_2_beta0[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_BETA1][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42_x((double *) grad_0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_y((double *) grad_1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_z((double *) grad_2,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();

		deriv42_y((double *) grad2_0_1,(const double *) grad_0,dy, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_z((double *) grad2_0_2,(const double *) grad_0,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_z((double *) grad2_1_2,(const double *) grad_1,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) grad_0,&(__derivWorkspace->__grad_0_beta1[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad_1,&(__derivWorkspace->__grad_1_beta1[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad_2,&(__derivWorkspace->__grad_2_beta1[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad2_0_1,&(__derivWorkspace->__grad2_0_1_beta1[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad2_0_2,&(__derivWorkspace->__grad2_0_2_beta1[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad2_1_2,&(__derivWorkspace->__grad2_1_2_beta1[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_BETA2][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42_x((double *) grad_0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_y((double *) grad_1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_z((double *) grad_2,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();

		deriv42_y((double *) grad2_0_1,(const double *) grad_0,dy, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_z((double *) grad2_0_2,(const double *) grad_0,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_z((double *) grad2_1_2,(const double *) grad_1,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) grad_0,&(__derivWorkspace->__grad_0_beta2[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad_1,&(__derivWorkspace->__grad_1_beta2[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad_2,&(__derivWorkspace->__grad_2_beta2[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad2_0_1,&(__derivWorkspace->__grad2_0_1_beta2[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad2_0_2,&(__derivWorkspace->__grad2_0_2_beta2[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad2_1_2,&(__derivWorkspace->__grad2_1_2_beta2[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_B0][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42_x((double *) grad_0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_y((double *) grad_1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_z((double *) grad_2,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();

		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) grad_0,&(__derivWorkspace->__grad_0_B0[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad_1,&(__derivWorkspace->__grad_1_B0[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad_2,&(__derivWorkspace->__grad_2_B0[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_B1][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42_x((double *) grad_0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_y((double *) grad_1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_z((double *) grad_2,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();

		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) grad_0,&(__derivWorkspace->__grad_0_B1[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad_1,&(__derivWorkspace->__grad_1_B1[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad_2,&(__derivWorkspace->__grad_2_B1[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_B2][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42_x((double *) grad_0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_y((double *) grad_1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_z((double *) grad_2,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();

		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) grad_0,&(__derivWorkspace->__grad_0_B2[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad_1,&(__derivWorkspace->__grad_1_B2[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad_2,&(__derivWorkspace->__grad_2_B2[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_CHI][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42_x((double *) grad_0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_y((double *) grad_1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_z((double *) grad_2,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();

		deriv42_y((double *) grad2_0_1,(const double *) grad_0,dy, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_z((double *) grad2_0_2,(const double *) grad_0,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_z((double *) grad2_1_2,(const double *) grad_1,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) grad_0,&(__derivWorkspace->__grad_0_chi[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad_1,&(__derivWorkspace->__grad_1_chi[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad_2,&(__derivWorkspace->__grad_2_chi[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad2_0_1,&(__derivWorkspace->__grad2_0_1_chi[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad2_0_2,&(__derivWorkspace->__grad2_0_2_chi[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad2_1_2,&(__derivWorkspace->__grad2_1_2_chi[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_GT0][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42_x((double *) grad_0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_y((double *) grad_1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_z((double *) grad_2,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();

		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) grad_0,&(__derivWorkspace->__grad_0_Gt0[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad_1,&(__derivWorkspace->__grad_1_Gt0[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad_2,&(__derivWorkspace->__grad_2_Gt0[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_GT1][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42_x((double *) grad_0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_y((double *) grad_1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_z((double *) grad_2,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();

		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) grad_0,&(__derivWorkspace->__grad_0_Gt1[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad_1,&(__derivWorkspace->__grad_1_Gt1[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad_2,&(__derivWorkspace->__grad_2_Gt1[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_GT2][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42_x((double *) grad_0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_y((double *) grad_1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_z((double *) grad_2,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();

		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) grad_0,&(__derivWorkspace->__grad_0_Gt2[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad_1,&(__derivWorkspace->__grad_1_Gt2[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad_2,&(__derivWorkspace->__grad_2_Gt2[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_K][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42_x((double *) grad_0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_y((double *) grad_1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_z((double *) grad_2,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();

		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) grad_0,&(__derivWorkspace->__grad_0_K[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad_1,&(__derivWorkspace->__grad_1_K[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad_2,&(__derivWorkspace->__grad_2_K[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_SYMGT0][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42_x((double *) grad_0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_y((double *) grad_1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_z((double *) grad_2,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();

		deriv42_y((double *) grad2_0_1,(const double *) grad_0,dy, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_z((double *) grad2_0_2,(const double *) grad_0,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_z((double *) grad2_1_2,(const double *) grad_1,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) grad_0,&(__derivWorkspace->__grad_0_gt0[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad_1,&(__derivWorkspace->__grad_1_gt0[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad_2,&(__derivWorkspace->__grad_2_gt0[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad2_0_1,&(__derivWorkspace->__grad2_0_1_gt0[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad2_0_2,&(__derivWorkspace->__grad2_0_2_gt0[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad2_1_2,&(__derivWorkspace->__grad2_1_2_gt0[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_SYMGT1][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42_x((double *) grad_0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_y((double *) grad_1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_z((double *) grad_2,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();

		deriv42_y((double *) grad2_0_1,(const double *) grad_0,dy, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_z((double *) grad2_0_2,(const double *) grad_0,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_z((double *) grad2_1_2,(const double *) grad_1,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) grad_0,&(__derivWorkspace->__grad_0_gt1[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad_1,&(__derivWorkspace->__grad_1_gt1[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad_2,&(__derivWorkspace->__grad_2_gt1[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad2_0_1,&(__derivWorkspace->__grad2_0_1_gt1[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad2_0_2,&(__derivWorkspace->__grad2_0_2_gt1[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad2_1_2,&(__derivWorkspace->__grad2_1_2_gt1[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_SYMGT2][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42_x((double *) grad_0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_y((double *) grad_1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_z((double *) grad_2,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();

		deriv42_y((double *) grad2_0_1,(const double *) grad_0,dy, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_z((double *) grad2_0_2,(const double *) grad_0,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_z((double *) grad2_1_2,(const double *) grad_1,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) grad_0,&(__derivWorkspace->__grad_0_gt2[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad_1,&(__derivWorkspace->__grad_1_gt2[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad_2,&(__derivWorkspace->__grad_2_gt2[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad2_0_1,&(__derivWorkspace->__grad2_0_1_gt2[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad2_0_2,&(__derivWorkspace->__grad2_0_2_gt2[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad2_1_2,&(__derivWorkspace->__grad2_1_2_gt2[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_SYMGT3][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42_x((double *) grad_0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_y((double *) grad_1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_z((double *) grad_2,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();

		deriv42_y((double *) grad2_0_1,(const double *) grad_0,dy, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_z((double *) grad2_0_2,(const double *) grad_0,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_z((double *) grad2_1_2,(const double *) grad_1,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) grad_0,&(__derivWorkspace->__grad_0_gt3[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad_1,&(__derivWorkspace->__grad_1_gt3[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad_2,&(__derivWorkspace->__grad_2_gt3[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad2_0_1,&(__derivWorkspace->__grad2_0_1_gt3[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad2_0_2,&(__derivWorkspace->__grad2_0_2_gt3[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad2_1_2,&(__derivWorkspace->__grad2_1_2_gt3[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_SYMGT4][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42_x((double *) grad_0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_y((double *) grad_1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_z((double *) grad_2,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();

		deriv42_y((double *) grad2_0_1,(const double *) grad_0,dy, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_z((double *) grad2_0_2,(const double *) grad_0,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_z((double *) grad2_1_2,(const double *) grad_1,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) grad_0,&(__derivWorkspace->__grad_0_gt4[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad_1,&(__derivWorkspace->__grad_1_gt4[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad_2,&(__derivWorkspace->__grad_2_gt4[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad2_0_1,&(__derivWorkspace->__grad2_0_1_gt4[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad2_0_2,&(__derivWorkspace->__grad2_0_2_gt4[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad2_1_2,&(__derivWorkspace->__grad2_1_2_gt4[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_SYMGT5][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42_x((double *) grad_0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_y((double *) grad_1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_z((double *) grad_2,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();

		deriv42_y((double *) grad2_0_1,(const double *) grad_0,dy, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_z((double *) grad2_0_2,(const double *) grad_0,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_z((double *) grad2_1_2,(const double *) grad_1,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) grad_0,&(__derivWorkspace->__grad_0_gt5[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad_1,&(__derivWorkspace->__grad_1_gt5[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad_2,&(__derivWorkspace->__grad_2_gt5[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad2_0_1,&(__derivWorkspace->__grad2_0_1_gt5[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad2_0_2,&(__derivWorkspace->__grad2_0_2_gt5[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad2_1_2,&(__derivWorkspace->__grad2_1_2_gt5[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_SYMAT0][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42_x((double *) grad_0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_y((double *) grad_1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_z((double *) grad_2,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();

		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) grad_0,&(__derivWorkspace->__grad_0_At0[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad_1,&(__derivWorkspace->__grad_1_At0[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad_2,&(__derivWorkspace->__grad_2_At0[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_SYMAT1][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42_x((double *) grad_0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_y((double *) grad_1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_z((double *) grad_2,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();

		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) grad_0,&(__derivWorkspace->__grad_0_At1[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad_1,&(__derivWorkspace->__grad_1_At1[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad_2,&(__derivWorkspace->__grad_2_At1[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_SYMAT2][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42_x((double *) grad_0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_y((double *) grad_1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_z((double *) grad_2,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();

		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) grad_0,&(__derivWorkspace->__grad_0_At2[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad_1,&(__derivWorkspace->__grad_1_At2[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad_2,&(__derivWorkspace->__grad_2_At2[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_SYMAT3][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42_x((double *) grad_0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_y((double *) grad_1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_z((double *) grad_2,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();

		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) grad_0,&(__derivWorkspace->__grad_0_At3[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad_1,&(__derivWorkspace->__grad_1_At3[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad_2,&(__derivWorkspace->__grad_2_At3[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_SYMAT4][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42_x((double *) grad_0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_y((double *) grad_1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_z((double *) grad_2,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();

		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) grad_0,&(__derivWorkspace->__grad_0_At4[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad_1,&(__derivWorkspace->__grad_1_At4[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad_2,&(__derivWorkspace->__grad_2_At4[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_SYMAT5][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42_x((double *) grad_0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_y((double *) grad_1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_z((double *) grad_2,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();

		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) grad_0,&(__derivWorkspace->__grad_0_At5[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad_1,&(__derivWorkspace->__grad_1_At5[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad_2,&(__derivWorkspace->__grad_2_At5[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		} // end of block tile loop

} // end of kernel __computeDerivPass1


/**compute derivative kernel __computeDerivPass2 */
__global__ void __computeDerivPass2(const double**__unzipInVar,MemoryDerivs* __derivWorkspace, const cuda::_Block* __dendroBlkList, const cudaDeviceProp*__deviceProperties){

const _Block dblock=__dendroBlkList[blockIdx.x];
const unsigned int NUM_SM_UNITS=__deviceProperties->multiProcessorCount;
const unsigned int SM_ID=blockIdx.x%NUM_SM_UNITS;
const unsigned int offset=dblock.getOffset();
const unsigned int *sz=dblock.getSz();
const double* hx=dblock.getDx();
const double dx=hx[0];
const double dy=hx[1];
const double dz=hx[2];
const double* ptmin=dblock.getPtMin();
const double* ptmax=dblock.getPtMax();
const unsigned int bflag=dblock.getBFlag();

const unsigned int blkSz=sz[0]*sz[1]*sz[2];

const unsigned int tile_sz[3]={9,9,9};
const unsigned int TILE_SZ=tile_sz[0]*tile_sz[1]*tile_sz[2];


__shared__ double grad2_0_0[729];
__shared__ double grad2_1_1[729];
__shared__ double grad2_2_2[729];
const unsigned int Lb = 1;// load begin bound
const unsigned int Le = sz[0]-1;// load end bound
const unsigned int BLK_INTERATIONS = ((int)ceil((double)(Le-Lb-tile_sz[0])/(tile_sz[0]-2*2)))+1;

unsigned int ijk_lm[3*2];
//allocate memory for shared deriv variables. 


//allocate memory for shared unzip input. 
__shared__ double unzipVarInShared[729];
for(unsigned int iter=0;iter<BLK_INTERATIONS;iter++){

		 ijk_lm[2*0+0]=max(1,(int)(1 + tile_sz[0]*iter -2*iter*2));
		 ijk_lm[2*0+1]=min(ijk_lm[2*0+0]+tile_sz[0],sz[0]-1);

		 ijk_lm[2*1+0]=max(1,(int)(1 + tile_sz[1]*iter -2*iter*2));
		 ijk_lm[2*1+1]=min(ijk_lm[2*1+0]+tile_sz[1],sz[1]-1);

		 ijk_lm[2*2+0]=max(1,(int)(1 + tile_sz[2]*iter -2*iter*2));
		 ijk_lm[2*2+1]=min(ijk_lm[2*2+0]+tile_sz[2],sz[2]-1);
		 //printf(" iter : %d threadid (%d,%d,%d) tile begin: (%d,%d,%d) tile end: (%d,%d,%d) \n",iter, threadIdx.x,threadIdx.y,threadIdx.z,ijk_lm[0],ijk_lm[2],ijk_lm[4],ijk_lm[1],ijk_lm[3],ijk_lm[5]);



		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_ALPHA][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42_xx((double *) grad2_0_0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_yy((double *) grad2_1_1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_zz((double *) grad2_2_2,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) grad2_0_0,&(__derivWorkspace->__grad2_0_0_alpha[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad2_1_1,&(__derivWorkspace->__grad2_1_1_alpha[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad2_2_2,&(__derivWorkspace->__grad2_2_2_alpha[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_BETA0][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42_xx((double *) grad2_0_0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_yy((double *) grad2_1_1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_zz((double *) grad2_2_2,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) grad2_0_0,&(__derivWorkspace->__grad2_0_0_beta0[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad2_1_1,&(__derivWorkspace->__grad2_1_1_beta0[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad2_2_2,&(__derivWorkspace->__grad2_2_2_beta0[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_BETA1][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42_xx((double *) grad2_0_0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_yy((double *) grad2_1_1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_zz((double *) grad2_2_2,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) grad2_0_0,&(__derivWorkspace->__grad2_0_0_beta1[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad2_1_1,&(__derivWorkspace->__grad2_1_1_beta1[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad2_2_2,&(__derivWorkspace->__grad2_2_2_beta1[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_BETA2][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42_xx((double *) grad2_0_0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_yy((double *) grad2_1_1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_zz((double *) grad2_2_2,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) grad2_0_0,&(__derivWorkspace->__grad2_0_0_beta2[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad2_1_1,&(__derivWorkspace->__grad2_1_1_beta2[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad2_2_2,&(__derivWorkspace->__grad2_2_2_beta2[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_B0][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		__syncthreads();

		//store derivs from shared to global memory

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_B1][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		__syncthreads();

		//store derivs from shared to global memory

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_B2][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		__syncthreads();

		//store derivs from shared to global memory

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_CHI][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42_xx((double *) grad2_0_0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_yy((double *) grad2_1_1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_zz((double *) grad2_2_2,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) grad2_0_0,&(__derivWorkspace->__grad2_0_0_chi[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad2_1_1,&(__derivWorkspace->__grad2_1_1_chi[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad2_2_2,&(__derivWorkspace->__grad2_2_2_chi[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_GT0][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		__syncthreads();

		//store derivs from shared to global memory

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_GT1][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		__syncthreads();

		//store derivs from shared to global memory

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_GT2][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		__syncthreads();

		//store derivs from shared to global memory

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_K][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		__syncthreads();

		//store derivs from shared to global memory

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_SYMGT0][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42_xx((double *) grad2_0_0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_yy((double *) grad2_1_1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_zz((double *) grad2_2_2,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) grad2_0_0,&(__derivWorkspace->__grad2_0_0_gt0[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad2_1_1,&(__derivWorkspace->__grad2_1_1_gt0[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad2_2_2,&(__derivWorkspace->__grad2_2_2_gt0[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_SYMGT1][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42_xx((double *) grad2_0_0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_yy((double *) grad2_1_1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_zz((double *) grad2_2_2,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) grad2_0_0,&(__derivWorkspace->__grad2_0_0_gt1[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad2_1_1,&(__derivWorkspace->__grad2_1_1_gt1[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad2_2_2,&(__derivWorkspace->__grad2_2_2_gt1[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_SYMGT2][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42_xx((double *) grad2_0_0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_yy((double *) grad2_1_1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_zz((double *) grad2_2_2,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) grad2_0_0,&(__derivWorkspace->__grad2_0_0_gt2[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad2_1_1,&(__derivWorkspace->__grad2_1_1_gt2[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad2_2_2,&(__derivWorkspace->__grad2_2_2_gt2[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_SYMGT3][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42_xx((double *) grad2_0_0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_yy((double *) grad2_1_1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_zz((double *) grad2_2_2,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) grad2_0_0,&(__derivWorkspace->__grad2_0_0_gt3[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad2_1_1,&(__derivWorkspace->__grad2_1_1_gt3[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad2_2_2,&(__derivWorkspace->__grad2_2_2_gt3[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_SYMGT4][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42_xx((double *) grad2_0_0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_yy((double *) grad2_1_1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_zz((double *) grad2_2_2,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) grad2_0_0,&(__derivWorkspace->__grad2_0_0_gt4[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad2_1_1,&(__derivWorkspace->__grad2_1_1_gt4[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad2_2_2,&(__derivWorkspace->__grad2_2_2_gt4[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_SYMGT5][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42_xx((double *) grad2_0_0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_yy((double *) grad2_1_1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		deriv42_zz((double *) grad2_2_2,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 2, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) grad2_0_0,&(__derivWorkspace->__grad2_0_0_gt5[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad2_1_1,&(__derivWorkspace->__grad2_1_1_gt5[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) grad2_2_2,&(__derivWorkspace->__grad2_2_2_gt5[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_SYMAT0][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		__syncthreads();

		//store derivs from shared to global memory

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_SYMAT1][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		__syncthreads();

		//store derivs from shared to global memory

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_SYMAT2][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		__syncthreads();

		//store derivs from shared to global memory

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_SYMAT3][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		__syncthreads();

		//store derivs from shared to global memory

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_SYMAT4][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		__syncthreads();

		//store derivs from shared to global memory

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_SYMAT5][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		__syncthreads();

		//store derivs from shared to global memory
		} // end of block tile loop

} // end of kernel __computeDerivPass2


/**compute derivative kernel __computeDerivPass3 */
__global__ void __computeDerivPass3(const double**__unzipInVar,MemoryDerivs* __derivWorkspace, const cuda::_Block* __dendroBlkList, const cudaDeviceProp*__deviceProperties){

const _Block dblock=__dendroBlkList[blockIdx.x];
const unsigned int NUM_SM_UNITS=__deviceProperties->multiProcessorCount;
const unsigned int SM_ID=blockIdx.x%NUM_SM_UNITS;
const unsigned int offset=dblock.getOffset();
const unsigned int *sz=dblock.getSz();
const double* hx=dblock.getDx();
const double dx=hx[0];
const double dy=hx[1];
const double dz=hx[2];
const double* ptmin=dblock.getPtMin();
const double* ptmax=dblock.getPtMax();
const unsigned int bflag=dblock.getBFlag();

const unsigned int blkSz=sz[0]*sz[1]*sz[2];

const unsigned int tile_sz[3]={11,11,11};
const unsigned int TILE_SZ=tile_sz[0]*tile_sz[1]*tile_sz[2];


__shared__ double agrad_0[1331];
__shared__ double kograd_0[1331];
const unsigned int Lb = 0;// load begin bound
const unsigned int Le = sz[0]-0;// load end bound
const unsigned int BLK_INTERATIONS = ((int)ceil((double)(Le-Lb-tile_sz[0])/(tile_sz[0]-2*3)))+1;

unsigned int ijk_lm[3*2];
//allocate memory for shared deriv variables. 


//allocate memory for shared unzip input. 
__shared__ double unzipVarInShared[1331];
__shared__ double beta0[1331];
for(unsigned int iter=0;iter<BLK_INTERATIONS;iter++){

		 ijk_lm[2*0+0]=max(0,(int)(0 + tile_sz[0]*iter -2*iter*3));
		 ijk_lm[2*0+1]=min(ijk_lm[2*0+0]+tile_sz[0],sz[0]);

		 ijk_lm[2*1+0]=max(0,(int)(0 + tile_sz[1]*iter -2*iter*3));
		 ijk_lm[2*1+1]=min(ijk_lm[2*1+0]+tile_sz[1],sz[1]);

		 ijk_lm[2*2+0]=max(0,(int)(0 + tile_sz[2]*iter -2*iter*3));
		 ijk_lm[2*2+1]=min(ijk_lm[2*2+0]+tile_sz[2],sz[2]);
		 //printf(" iter : %d threadid (%d,%d,%d) tile begin: (%d,%d,%d) tile end: (%d,%d,%d) \n",iter, threadIdx.x,threadIdx.y,threadIdx.z,ijk_lm[0],ijk_lm[2],ijk_lm[4],ijk_lm[1],ijk_lm[3],ijk_lm[5]);



		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_ALPHA][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42adv_x((double *) agrad_0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, (const double*) beta0 , 3, bflag);
		ko_deriv42_x((double *) kograd_0,(const double *) unzipVarInShared,dx,(const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) agrad_0,&(__derivWorkspace->__agrad_0_alpha[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) kograd_0,&(__derivWorkspace->__kograd_0_alpha[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_BETA0][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42adv_x((double *) agrad_0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, (const double*) beta0 , 3, bflag);
		ko_deriv42_x((double *) kograd_0,(const double *) unzipVarInShared,dx,(const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) agrad_0,&(__derivWorkspace->__agrad_0_beta0[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) kograd_0,&(__derivWorkspace->__kograd_0_beta0[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_BETA1][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42adv_x((double *) agrad_0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, (const double*) beta0 , 3, bflag);
		ko_deriv42_x((double *) kograd_0,(const double *) unzipVarInShared,dx,(const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) agrad_0,&(__derivWorkspace->__agrad_0_beta1[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) kograd_0,&(__derivWorkspace->__kograd_0_beta1[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_BETA2][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42adv_x((double *) agrad_0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, (const double*) beta0 , 3, bflag);
		ko_deriv42_x((double *) kograd_0,(const double *) unzipVarInShared,dx,(const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) agrad_0,&(__derivWorkspace->__agrad_0_beta2[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) kograd_0,&(__derivWorkspace->__kograd_0_beta2[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_B0][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42adv_x((double *) agrad_0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, (const double*) beta0 , 3, bflag);
		ko_deriv42_x((double *) kograd_0,(const double *) unzipVarInShared,dx,(const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) agrad_0,&(__derivWorkspace->__agrad_0_B0[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) kograd_0,&(__derivWorkspace->__kograd_0_B0[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_B1][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42adv_x((double *) agrad_0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, (const double*) beta0 , 3, bflag);
		ko_deriv42_x((double *) kograd_0,(const double *) unzipVarInShared,dx,(const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) agrad_0,&(__derivWorkspace->__agrad_0_B1[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) kograd_0,&(__derivWorkspace->__kograd_0_B1[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_B2][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42adv_x((double *) agrad_0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, (const double*) beta0 , 3, bflag);
		ko_deriv42_x((double *) kograd_0,(const double *) unzipVarInShared,dx,(const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) agrad_0,&(__derivWorkspace->__agrad_0_B2[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) kograd_0,&(__derivWorkspace->__kograd_0_B2[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_CHI][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42adv_x((double *) agrad_0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, (const double*) beta0 , 3, bflag);
		ko_deriv42_x((double *) kograd_0,(const double *) unzipVarInShared,dx,(const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) agrad_0,&(__derivWorkspace->__agrad_0_chi[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) kograd_0,&(__derivWorkspace->__kograd_0_chi[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_GT0][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42adv_x((double *) agrad_0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, (const double*) beta0 , 3, bflag);
		ko_deriv42_x((double *) kograd_0,(const double *) unzipVarInShared,dx,(const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) agrad_0,&(__derivWorkspace->__agrad_0_Gt0[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) kograd_0,&(__derivWorkspace->__kograd_0_Gt0[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_GT1][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42adv_x((double *) agrad_0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, (const double*) beta0 , 3, bflag);
		ko_deriv42_x((double *) kograd_0,(const double *) unzipVarInShared,dx,(const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) agrad_0,&(__derivWorkspace->__agrad_0_Gt1[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) kograd_0,&(__derivWorkspace->__kograd_0_Gt1[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_GT2][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42adv_x((double *) agrad_0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, (const double*) beta0 , 3, bflag);
		ko_deriv42_x((double *) kograd_0,(const double *) unzipVarInShared,dx,(const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) agrad_0,&(__derivWorkspace->__agrad_0_Gt2[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) kograd_0,&(__derivWorkspace->__kograd_0_Gt2[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_K][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42adv_x((double *) agrad_0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, (const double*) beta0 , 3, bflag);
		ko_deriv42_x((double *) kograd_0,(const double *) unzipVarInShared,dx,(const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) agrad_0,&(__derivWorkspace->__agrad_0_K[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) kograd_0,&(__derivWorkspace->__kograd_0_K[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_SYMGT0][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42adv_x((double *) agrad_0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, (const double*) beta0 , 3, bflag);
		ko_deriv42_x((double *) kograd_0,(const double *) unzipVarInShared,dx,(const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) agrad_0,&(__derivWorkspace->__agrad_0_gt0[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) kograd_0,&(__derivWorkspace->__kograd_0_gt0[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_SYMGT1][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42adv_x((double *) agrad_0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, (const double*) beta0 , 3, bflag);
		ko_deriv42_x((double *) kograd_0,(const double *) unzipVarInShared,dx,(const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) agrad_0,&(__derivWorkspace->__agrad_0_gt1[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) kograd_0,&(__derivWorkspace->__kograd_0_gt1[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_SYMGT2][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42adv_x((double *) agrad_0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, (const double*) beta0 , 3, bflag);
		ko_deriv42_x((double *) kograd_0,(const double *) unzipVarInShared,dx,(const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) agrad_0,&(__derivWorkspace->__agrad_0_gt2[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) kograd_0,&(__derivWorkspace->__kograd_0_gt2[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_SYMGT3][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42adv_x((double *) agrad_0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, (const double*) beta0 , 3, bflag);
		ko_deriv42_x((double *) kograd_0,(const double *) unzipVarInShared,dx,(const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) agrad_0,&(__derivWorkspace->__agrad_0_gt3[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) kograd_0,&(__derivWorkspace->__kograd_0_gt3[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_SYMGT4][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42adv_x((double *) agrad_0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, (const double*) beta0 , 3, bflag);
		ko_deriv42_x((double *) kograd_0,(const double *) unzipVarInShared,dx,(const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) agrad_0,&(__derivWorkspace->__agrad_0_gt4[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) kograd_0,&(__derivWorkspace->__kograd_0_gt4[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_SYMGT5][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42adv_x((double *) agrad_0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, (const double*) beta0 , 3, bflag);
		ko_deriv42_x((double *) kograd_0,(const double *) unzipVarInShared,dx,(const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) agrad_0,&(__derivWorkspace->__agrad_0_gt5[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) kograd_0,&(__derivWorkspace->__kograd_0_gt5[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_SYMAT0][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42adv_x((double *) agrad_0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, (const double*) beta0 , 3, bflag);
		ko_deriv42_x((double *) kograd_0,(const double *) unzipVarInShared,dx,(const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) agrad_0,&(__derivWorkspace->__agrad_0_At0[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) kograd_0,&(__derivWorkspace->__kograd_0_At0[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_SYMAT1][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42adv_x((double *) agrad_0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, (const double*) beta0 , 3, bflag);
		ko_deriv42_x((double *) kograd_0,(const double *) unzipVarInShared,dx,(const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) agrad_0,&(__derivWorkspace->__agrad_0_At1[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) kograd_0,&(__derivWorkspace->__kograd_0_At1[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_SYMAT2][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42adv_x((double *) agrad_0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, (const double*) beta0 , 3, bflag);
		ko_deriv42_x((double *) kograd_0,(const double *) unzipVarInShared,dx,(const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) agrad_0,&(__derivWorkspace->__agrad_0_At2[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) kograd_0,&(__derivWorkspace->__kograd_0_At2[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_SYMAT3][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42adv_x((double *) agrad_0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, (const double*) beta0 , 3, bflag);
		ko_deriv42_x((double *) kograd_0,(const double *) unzipVarInShared,dx,(const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) agrad_0,&(__derivWorkspace->__agrad_0_At3[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) kograd_0,&(__derivWorkspace->__kograd_0_At3[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_SYMAT4][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42adv_x((double *) agrad_0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, (const double*) beta0 , 3, bflag);
		ko_deriv42_x((double *) kograd_0,(const double *) unzipVarInShared,dx,(const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) agrad_0,&(__derivWorkspace->__agrad_0_At4[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) kograd_0,&(__derivWorkspace->__kograd_0_At4[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_SYMAT5][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42adv_x((double *) agrad_0,(const double *) unzipVarInShared,dx, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, (const double*) beta0 , 3, bflag);
		ko_deriv42_x((double *) kograd_0,(const double *) unzipVarInShared,dx,(const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) agrad_0,&(__derivWorkspace->__agrad_0_At5[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) kograd_0,&(__derivWorkspace->__kograd_0_At5[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		} // end of block tile loop

} // end of kernel __computeDerivPass3


/**compute derivative kernel __computeDerivPass4 */
__global__ void __computeDerivPass4(const double**__unzipInVar,MemoryDerivs* __derivWorkspace, const cuda::_Block* __dendroBlkList, const cudaDeviceProp*__deviceProperties){

const _Block dblock=__dendroBlkList[blockIdx.x];
const unsigned int NUM_SM_UNITS=__deviceProperties->multiProcessorCount;
const unsigned int SM_ID=blockIdx.x%NUM_SM_UNITS;
const unsigned int offset=dblock.getOffset();
const unsigned int *sz=dblock.getSz();
const double* hx=dblock.getDx();
const double dx=hx[0];
const double dy=hx[1];
const double dz=hx[2];
const double* ptmin=dblock.getPtMin();
const double* ptmax=dblock.getPtMax();
const unsigned int bflag=dblock.getBFlag();

const unsigned int blkSz=sz[0]*sz[1]*sz[2];

const unsigned int tile_sz[3]={11,11,11};
const unsigned int TILE_SZ=tile_sz[0]*tile_sz[1]*tile_sz[2];


__shared__ double agrad_1[1331];
__shared__ double kograd_1[1331];
const unsigned int Lb = 0;// load begin bound
const unsigned int Le = sz[0]-0;// load end bound
const unsigned int BLK_INTERATIONS = ((int)ceil((double)(Le-Lb-tile_sz[0])/(tile_sz[0]-2*3)))+1;

unsigned int ijk_lm[3*2];
//allocate memory for shared deriv variables. 


//allocate memory for shared unzip input. 
__shared__ double unzipVarInShared[1331];
__shared__ double beta0[1331];
for(unsigned int iter=0;iter<BLK_INTERATIONS;iter++){

		 ijk_lm[2*0+0]=max(0,(int)(0 + tile_sz[0]*iter -2*iter*3));
		 ijk_lm[2*0+1]=min(ijk_lm[2*0+0]+tile_sz[0],sz[0]);

		 ijk_lm[2*1+0]=max(0,(int)(0 + tile_sz[1]*iter -2*iter*3));
		 ijk_lm[2*1+1]=min(ijk_lm[2*1+0]+tile_sz[1],sz[1]);

		 ijk_lm[2*2+0]=max(0,(int)(0 + tile_sz[2]*iter -2*iter*3));
		 ijk_lm[2*2+1]=min(ijk_lm[2*2+0]+tile_sz[2],sz[2]);
		 //printf(" iter : %d threadid (%d,%d,%d) tile begin: (%d,%d,%d) tile end: (%d,%d,%d) \n",iter, threadIdx.x,threadIdx.y,threadIdx.z,ijk_lm[0],ijk_lm[2],ijk_lm[4],ijk_lm[1],ijk_lm[3],ijk_lm[5]);



		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_ALPHA][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42adv_y((double *) agrad_1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, (const double*) beta0 , 3, bflag);
		ko_deriv42_y((double *) kograd_1,(const double *) unzipVarInShared,dy,(const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) agrad_1,&(__derivWorkspace->__agrad_1_alpha[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) kograd_1,&(__derivWorkspace->__kograd_1_alpha[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_BETA0][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42adv_y((double *) agrad_1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, (const double*) beta0 , 3, bflag);
		ko_deriv42_y((double *) kograd_1,(const double *) unzipVarInShared,dy,(const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) agrad_1,&(__derivWorkspace->__agrad_1_beta0[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) kograd_1,&(__derivWorkspace->__kograd_1_beta0[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_BETA1][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42adv_y((double *) agrad_1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, (const double*) beta0 , 3, bflag);
		ko_deriv42_y((double *) kograd_1,(const double *) unzipVarInShared,dy,(const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) agrad_1,&(__derivWorkspace->__agrad_1_beta1[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) kograd_1,&(__derivWorkspace->__kograd_1_beta1[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_BETA2][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42adv_y((double *) agrad_1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, (const double*) beta0 , 3, bflag);
		ko_deriv42_y((double *) kograd_1,(const double *) unzipVarInShared,dy,(const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) agrad_1,&(__derivWorkspace->__agrad_1_beta2[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) kograd_1,&(__derivWorkspace->__kograd_1_beta2[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_B0][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42adv_y((double *) agrad_1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, (const double*) beta0 , 3, bflag);
		ko_deriv42_y((double *) kograd_1,(const double *) unzipVarInShared,dy,(const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) agrad_1,&(__derivWorkspace->__agrad_1_B0[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) kograd_1,&(__derivWorkspace->__kograd_1_B0[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_B1][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42adv_y((double *) agrad_1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, (const double*) beta0 , 3, bflag);
		ko_deriv42_y((double *) kograd_1,(const double *) unzipVarInShared,dy,(const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) agrad_1,&(__derivWorkspace->__agrad_1_B1[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) kograd_1,&(__derivWorkspace->__kograd_1_B1[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_B2][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42adv_y((double *) agrad_1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, (const double*) beta0 , 3, bflag);
		ko_deriv42_y((double *) kograd_1,(const double *) unzipVarInShared,dy,(const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) agrad_1,&(__derivWorkspace->__agrad_1_B2[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) kograd_1,&(__derivWorkspace->__kograd_1_B2[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_CHI][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42adv_y((double *) agrad_1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, (const double*) beta0 , 3, bflag);
		ko_deriv42_y((double *) kograd_1,(const double *) unzipVarInShared,dy,(const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) agrad_1,&(__derivWorkspace->__agrad_1_chi[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) kograd_1,&(__derivWorkspace->__kograd_1_chi[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_GT0][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42adv_y((double *) agrad_1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, (const double*) beta0 , 3, bflag);
		ko_deriv42_y((double *) kograd_1,(const double *) unzipVarInShared,dy,(const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) agrad_1,&(__derivWorkspace->__agrad_1_Gt0[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) kograd_1,&(__derivWorkspace->__kograd_1_Gt0[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_GT1][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42adv_y((double *) agrad_1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, (const double*) beta0 , 3, bflag);
		ko_deriv42_y((double *) kograd_1,(const double *) unzipVarInShared,dy,(const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) agrad_1,&(__derivWorkspace->__agrad_1_Gt1[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) kograd_1,&(__derivWorkspace->__kograd_1_Gt1[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_GT2][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42adv_y((double *) agrad_1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, (const double*) beta0 , 3, bflag);
		ko_deriv42_y((double *) kograd_1,(const double *) unzipVarInShared,dy,(const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) agrad_1,&(__derivWorkspace->__agrad_1_Gt2[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) kograd_1,&(__derivWorkspace->__kograd_1_Gt2[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_K][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42adv_y((double *) agrad_1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, (const double*) beta0 , 3, bflag);
		ko_deriv42_y((double *) kograd_1,(const double *) unzipVarInShared,dy,(const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) agrad_1,&(__derivWorkspace->__agrad_1_K[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) kograd_1,&(__derivWorkspace->__kograd_1_K[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_SYMGT0][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42adv_y((double *) agrad_1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, (const double*) beta0 , 3, bflag);
		ko_deriv42_y((double *) kograd_1,(const double *) unzipVarInShared,dy,(const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) agrad_1,&(__derivWorkspace->__agrad_1_gt0[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) kograd_1,&(__derivWorkspace->__kograd_1_gt0[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_SYMGT1][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42adv_y((double *) agrad_1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, (const double*) beta0 , 3, bflag);
		ko_deriv42_y((double *) kograd_1,(const double *) unzipVarInShared,dy,(const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) agrad_1,&(__derivWorkspace->__agrad_1_gt1[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) kograd_1,&(__derivWorkspace->__kograd_1_gt1[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_SYMGT2][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42adv_y((double *) agrad_1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, (const double*) beta0 , 3, bflag);
		ko_deriv42_y((double *) kograd_1,(const double *) unzipVarInShared,dy,(const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) agrad_1,&(__derivWorkspace->__agrad_1_gt2[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) kograd_1,&(__derivWorkspace->__kograd_1_gt2[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_SYMGT3][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42adv_y((double *) agrad_1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, (const double*) beta0 , 3, bflag);
		ko_deriv42_y((double *) kograd_1,(const double *) unzipVarInShared,dy,(const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) agrad_1,&(__derivWorkspace->__agrad_1_gt3[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) kograd_1,&(__derivWorkspace->__kograd_1_gt3[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_SYMGT4][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42adv_y((double *) agrad_1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, (const double*) beta0 , 3, bflag);
		ko_deriv42_y((double *) kograd_1,(const double *) unzipVarInShared,dy,(const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) agrad_1,&(__derivWorkspace->__agrad_1_gt4[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) kograd_1,&(__derivWorkspace->__kograd_1_gt4[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_SYMGT5][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42adv_y((double *) agrad_1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, (const double*) beta0 , 3, bflag);
		ko_deriv42_y((double *) kograd_1,(const double *) unzipVarInShared,dy,(const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) agrad_1,&(__derivWorkspace->__agrad_1_gt5[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) kograd_1,&(__derivWorkspace->__kograd_1_gt5[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_SYMAT0][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42adv_y((double *) agrad_1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, (const double*) beta0 , 3, bflag);
		ko_deriv42_y((double *) kograd_1,(const double *) unzipVarInShared,dy,(const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) agrad_1,&(__derivWorkspace->__agrad_1_At0[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) kograd_1,&(__derivWorkspace->__kograd_1_At0[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_SYMAT1][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42adv_y((double *) agrad_1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, (const double*) beta0 , 3, bflag);
		ko_deriv42_y((double *) kograd_1,(const double *) unzipVarInShared,dy,(const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) agrad_1,&(__derivWorkspace->__agrad_1_At1[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) kograd_1,&(__derivWorkspace->__kograd_1_At1[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_SYMAT2][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42adv_y((double *) agrad_1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, (const double*) beta0 , 3, bflag);
		ko_deriv42_y((double *) kograd_1,(const double *) unzipVarInShared,dy,(const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) agrad_1,&(__derivWorkspace->__agrad_1_At2[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) kograd_1,&(__derivWorkspace->__kograd_1_At2[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_SYMAT3][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42adv_y((double *) agrad_1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, (const double*) beta0 , 3, bflag);
		ko_deriv42_y((double *) kograd_1,(const double *) unzipVarInShared,dy,(const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) agrad_1,&(__derivWorkspace->__agrad_1_At3[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) kograd_1,&(__derivWorkspace->__kograd_1_At3[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_SYMAT4][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42adv_y((double *) agrad_1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, (const double*) beta0 , 3, bflag);
		ko_deriv42_y((double *) kograd_1,(const double *) unzipVarInShared,dy,(const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) agrad_1,&(__derivWorkspace->__agrad_1_At4[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) kograd_1,&(__derivWorkspace->__kograd_1_At4[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_SYMAT5][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42adv_y((double *) agrad_1,(const double *) unzipVarInShared,dy, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, (const double*) beta0 , 3, bflag);
		ko_deriv42_y((double *) kograd_1,(const double *) unzipVarInShared,dy,(const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) agrad_1,&(__derivWorkspace->__agrad_1_At5[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) kograd_1,&(__derivWorkspace->__kograd_1_At5[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		} // end of block tile loop

} // end of kernel __computeDerivPass4


/**compute derivative kernel __computeDerivPass5 */
__global__ void __computeDerivPass5(const double**__unzipInVar,MemoryDerivs* __derivWorkspace, const cuda::_Block* __dendroBlkList, const cudaDeviceProp*__deviceProperties){

const _Block dblock=__dendroBlkList[blockIdx.x];
const unsigned int NUM_SM_UNITS=__deviceProperties->multiProcessorCount;
const unsigned int SM_ID=blockIdx.x%NUM_SM_UNITS;
const unsigned int offset=dblock.getOffset();
const unsigned int *sz=dblock.getSz();
const double* hx=dblock.getDx();
const double dx=hx[0];
const double dy=hx[1];
const double dz=hx[2];
const double* ptmin=dblock.getPtMin();
const double* ptmax=dblock.getPtMax();
const unsigned int bflag=dblock.getBFlag();

const unsigned int blkSz=sz[0]*sz[1]*sz[2];

const unsigned int tile_sz[3]={11,11,11};
const unsigned int TILE_SZ=tile_sz[0]*tile_sz[1]*tile_sz[2];


__shared__ double agrad_2[1331];
__shared__ double kograd_2[1331];
const unsigned int Lb = 0;// load begin bound
const unsigned int Le = sz[0]-0;// load end bound
const unsigned int BLK_INTERATIONS = ((int)ceil((double)(Le-Lb-tile_sz[0])/(tile_sz[0]-2*3)))+1;

unsigned int ijk_lm[3*2];
//allocate memory for shared deriv variables. 


//allocate memory for shared unzip input. 
__shared__ double unzipVarInShared[1331];
__shared__ double beta0[1331];
for(unsigned int iter=0;iter<BLK_INTERATIONS;iter++){

		 ijk_lm[2*0+0]=max(0,(int)(0 + tile_sz[0]*iter -2*iter*3));
		 ijk_lm[2*0+1]=min(ijk_lm[2*0+0]+tile_sz[0],sz[0]);

		 ijk_lm[2*1+0]=max(0,(int)(0 + tile_sz[1]*iter -2*iter*3));
		 ijk_lm[2*1+1]=min(ijk_lm[2*1+0]+tile_sz[1],sz[1]);

		 ijk_lm[2*2+0]=max(0,(int)(0 + tile_sz[2]*iter -2*iter*3));
		 ijk_lm[2*2+1]=min(ijk_lm[2*2+0]+tile_sz[2],sz[2]);
		 //printf(" iter : %d threadid (%d,%d,%d) tile begin: (%d,%d,%d) tile end: (%d,%d,%d) \n",iter, threadIdx.x,threadIdx.y,threadIdx.z,ijk_lm[0],ijk_lm[2],ijk_lm[4],ijk_lm[1],ijk_lm[3],ijk_lm[5]);



		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_ALPHA][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42adv_z((double *) agrad_2,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, (const double*) beta0 , 3, bflag);
		ko_deriv42_z((double *) kograd_2,(const double *) unzipVarInShared,dz,(const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) agrad_2,&(__derivWorkspace->__agrad_2_alpha[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) kograd_2,&(__derivWorkspace->__kograd_2_alpha[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_BETA0][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42adv_z((double *) agrad_2,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, (const double*) beta0 , 3, bflag);
		ko_deriv42_z((double *) kograd_2,(const double *) unzipVarInShared,dz,(const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) agrad_2,&(__derivWorkspace->__agrad_2_beta0[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) kograd_2,&(__derivWorkspace->__kograd_2_beta0[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_BETA1][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42adv_z((double *) agrad_2,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, (const double*) beta0 , 3, bflag);
		ko_deriv42_z((double *) kograd_2,(const double *) unzipVarInShared,dz,(const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) agrad_2,&(__derivWorkspace->__agrad_2_beta1[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) kograd_2,&(__derivWorkspace->__kograd_2_beta1[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_BETA2][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42adv_z((double *) agrad_2,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, (const double*) beta0 , 3, bflag);
		ko_deriv42_z((double *) kograd_2,(const double *) unzipVarInShared,dz,(const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) agrad_2,&(__derivWorkspace->__agrad_2_beta2[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) kograd_2,&(__derivWorkspace->__kograd_2_beta2[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_B0][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42adv_z((double *) agrad_2,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, (const double*) beta0 , 3, bflag);
		ko_deriv42_z((double *) kograd_2,(const double *) unzipVarInShared,dz,(const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) agrad_2,&(__derivWorkspace->__agrad_2_B0[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) kograd_2,&(__derivWorkspace->__kograd_2_B0[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_B1][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42adv_z((double *) agrad_2,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, (const double*) beta0 , 3, bflag);
		ko_deriv42_z((double *) kograd_2,(const double *) unzipVarInShared,dz,(const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) agrad_2,&(__derivWorkspace->__agrad_2_B1[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) kograd_2,&(__derivWorkspace->__kograd_2_B1[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_B2][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42adv_z((double *) agrad_2,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, (const double*) beta0 , 3, bflag);
		ko_deriv42_z((double *) kograd_2,(const double *) unzipVarInShared,dz,(const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) agrad_2,&(__derivWorkspace->__agrad_2_B2[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) kograd_2,&(__derivWorkspace->__kograd_2_B2[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_CHI][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42adv_z((double *) agrad_2,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, (const double*) beta0 , 3, bflag);
		ko_deriv42_z((double *) kograd_2,(const double *) unzipVarInShared,dz,(const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) agrad_2,&(__derivWorkspace->__agrad_2_chi[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) kograd_2,&(__derivWorkspace->__kograd_2_chi[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_GT0][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42adv_z((double *) agrad_2,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, (const double*) beta0 , 3, bflag);
		ko_deriv42_z((double *) kograd_2,(const double *) unzipVarInShared,dz,(const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) agrad_2,&(__derivWorkspace->__agrad_2_Gt0[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) kograd_2,&(__derivWorkspace->__kograd_2_Gt0[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_GT1][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42adv_z((double *) agrad_2,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, (const double*) beta0 , 3, bflag);
		ko_deriv42_z((double *) kograd_2,(const double *) unzipVarInShared,dz,(const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) agrad_2,&(__derivWorkspace->__agrad_2_Gt1[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) kograd_2,&(__derivWorkspace->__kograd_2_Gt1[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_GT2][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42adv_z((double *) agrad_2,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, (const double*) beta0 , 3, bflag);
		ko_deriv42_z((double *) kograd_2,(const double *) unzipVarInShared,dz,(const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) agrad_2,&(__derivWorkspace->__agrad_2_Gt2[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) kograd_2,&(__derivWorkspace->__kograd_2_Gt2[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_K][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42adv_z((double *) agrad_2,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, (const double*) beta0 , 3, bflag);
		ko_deriv42_z((double *) kograd_2,(const double *) unzipVarInShared,dz,(const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) agrad_2,&(__derivWorkspace->__agrad_2_K[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) kograd_2,&(__derivWorkspace->__kograd_2_K[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_SYMGT0][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42adv_z((double *) agrad_2,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, (const double*) beta0 , 3, bflag);
		ko_deriv42_z((double *) kograd_2,(const double *) unzipVarInShared,dz,(const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) agrad_2,&(__derivWorkspace->__agrad_2_gt0[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) kograd_2,&(__derivWorkspace->__kograd_2_gt0[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_SYMGT1][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42adv_z((double *) agrad_2,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, (const double*) beta0 , 3, bflag);
		ko_deriv42_z((double *) kograd_2,(const double *) unzipVarInShared,dz,(const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) agrad_2,&(__derivWorkspace->__agrad_2_gt1[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) kograd_2,&(__derivWorkspace->__kograd_2_gt1[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_SYMGT2][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42adv_z((double *) agrad_2,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, (const double*) beta0 , 3, bflag);
		ko_deriv42_z((double *) kograd_2,(const double *) unzipVarInShared,dz,(const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) agrad_2,&(__derivWorkspace->__agrad_2_gt2[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) kograd_2,&(__derivWorkspace->__kograd_2_gt2[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_SYMGT3][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42adv_z((double *) agrad_2,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, (const double*) beta0 , 3, bflag);
		ko_deriv42_z((double *) kograd_2,(const double *) unzipVarInShared,dz,(const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) agrad_2,&(__derivWorkspace->__agrad_2_gt3[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) kograd_2,&(__derivWorkspace->__kograd_2_gt3[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_SYMGT4][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42adv_z((double *) agrad_2,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, (const double*) beta0 , 3, bflag);
		ko_deriv42_z((double *) kograd_2,(const double *) unzipVarInShared,dz,(const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) agrad_2,&(__derivWorkspace->__agrad_2_gt4[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) kograd_2,&(__derivWorkspace->__kograd_2_gt4[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_SYMGT5][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42adv_z((double *) agrad_2,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, (const double*) beta0 , 3, bflag);
		ko_deriv42_z((double *) kograd_2,(const double *) unzipVarInShared,dz,(const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) agrad_2,&(__derivWorkspace->__agrad_2_gt5[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) kograd_2,&(__derivWorkspace->__kograd_2_gt5[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_SYMAT0][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42adv_z((double *) agrad_2,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, (const double*) beta0 , 3, bflag);
		ko_deriv42_z((double *) kograd_2,(const double *) unzipVarInShared,dz,(const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) agrad_2,&(__derivWorkspace->__agrad_2_At0[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) kograd_2,&(__derivWorkspace->__kograd_2_At0[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_SYMAT1][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42adv_z((double *) agrad_2,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, (const double*) beta0 , 3, bflag);
		ko_deriv42_z((double *) kograd_2,(const double *) unzipVarInShared,dz,(const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) agrad_2,&(__derivWorkspace->__agrad_2_At1[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) kograd_2,&(__derivWorkspace->__kograd_2_At1[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_SYMAT2][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42adv_z((double *) agrad_2,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, (const double*) beta0 , 3, bflag);
		ko_deriv42_z((double *) kograd_2,(const double *) unzipVarInShared,dz,(const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) agrad_2,&(__derivWorkspace->__agrad_2_At2[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) kograd_2,&(__derivWorkspace->__kograd_2_At2[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_SYMAT3][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42adv_z((double *) agrad_2,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, (const double*) beta0 , 3, bflag);
		ko_deriv42_z((double *) kograd_2,(const double *) unzipVarInShared,dz,(const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) agrad_2,&(__derivWorkspace->__agrad_2_At3[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) kograd_2,&(__derivWorkspace->__kograd_2_At3[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_SYMAT4][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42adv_z((double *) agrad_2,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, (const double*) beta0 , 3, bflag);
		ko_deriv42_z((double *) kograd_2,(const double *) unzipVarInShared,dz,(const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) agrad_2,&(__derivWorkspace->__agrad_2_At4[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) kograd_2,&(__derivWorkspace->__kograd_2_At4[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);

		//load input data from global to shared memory
		cuda::__loadGlobalToShared<double>(&__unzipInVar[cuda::VAR::U_SYMAT5][offset],(double *) unzipVarInShared,(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		__syncthreads();
		deriv42adv_z((double *) agrad_2,(const double *) unzipVarInShared,dz, (const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, (const double*) beta0 , 3, bflag);
		ko_deriv42_z((double *) kograd_2,(const double *) unzipVarInShared,dz,(const unsigned int *) ijk_lm , (const unsigned int *) sz , (const unsigned int *) tile_sz, 3, bflag);
		__syncthreads();

		//store derivs from shared to global memory
		cuda::__storeSharedToGlobal<double>((double *) agrad_2,&(__derivWorkspace->__agrad_2_At5[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		cuda::__storeSharedToGlobal<double>((double *) kograd_2,&(__derivWorkspace->__kograd_2_At5[SM_ID * (__derivWorkspace->__maxBlkSz)]),(const unsigned int *) ijk_lm,(const unsigned int *) sz,(const unsigned int *) tile_sz);
		} // end of block tile loop

} // end of kernel __computeDerivPass5


}// end of namespace cuda
